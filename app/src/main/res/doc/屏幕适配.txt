屏幕适配：

屏幕尺寸：
屏幕对角线的长度（5寸 6寸...）
分辨率：
屏幕渲染，1920*1080  代表横向1080 纵向1920个像素点组成。
屏幕像素密度（DPI）：
指每一英寸可显示输出的像素个数，计算例如 DPI=（1920平方+1080平方）开根号/屏幕尺寸

什么是dp,dip,sp,px
px:构成图像的最小单位

dip(重点):Desity Independent pixels的缩写,即密度无关像素

android内部在识别图像像素时以160dpi为基准,1dip=1px或1dp=1px

例:在下列两台设备上使用DP进行操作
480 * 320 160dpi 那么这台机器上的1DP会被翻译成1px

800 * 480 240dpi 而这台机器上的1DP会被翻译成1.5px

也就是说当前我们设备的DP是由android给予的基础标准按比例进行翻译的，
这也是为什么我们用DP能解决一部分适配的原因



dp的问题：
由于碎片化，不同手机屏幕宽度不一致，如：
Nexus5的总宽度为360dp，我们现在在水平方向上放置两个按钮，一个是150dp左对齐，另外一个是200dp右对齐，那么中间留有10dp间隔；但假如同样地设置在Nexus S（屏幕宽度是320dp），会发现，两个按钮会重叠，因为320dp<200+150dp

px适配方案：
以一个分辨为基准，生成不同的values下demin文件如
以1920*1080为准，则先创建values-1920*1080，然后在包下分别创建x、y的px数值，按比例再创建其他分辨率的。。

缺点：
- 由于实际上还是使用px作为长度的度量单位，所以和google的要求使用dp作为度量单位会有所背离
- 必须尽可能多的包含所有分辨率，因为这个是使用这个方案的基础，如果有某个分辨率缺少，将无法完成该屏幕的适配
- 过多的分辨率像素描述xml文件会增加软件包的大小和维护的难度
- 对Android工程文件的apk包变的很大

解决方案：
1.dp资源适配，创建values-sw400dp类似包，再在下面创建dimens xml文件，系统会自动识别，
 可使用插件 插件名：ScreenMach。图片可以只切一套，xhdpi,一般设置图片ScaleType为centerCrop有很 好的效果。
2.自定义，通过尺寸换算公式，按一个规定的模板，算出每个尺寸的手机应设置的px大小。